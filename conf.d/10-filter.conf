filter {
  if [type] == "postfix" {
    grok {
	patterns_dir => ["/etc/logstash/patterns/"]
	match => ["message", "%{POSTFIX}"]
	add_tag => ["postfix", "unknown", "%{[component]}"]	
    }
    if "_grokparsefailure" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{AMAVIS}" ]
        add_tag => [ "amavis", "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{SASLD}" ]
        add_tag => [ "sasld", "unknown" ]
      }
    }
    if "sasld" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{SALSDRESULT}" ]
        add_tag => [ "result" ]
        remove_tag => [ "unknown" ]
      }
    }
    if "amavis" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{AMAVIS_FILECHECK}" ]
        add_tag => [ "quarantine_file" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{AMAVIS_CHECKING}" ]
        add_tag => [ "checking" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{AMAVIS_DKIM}" ]
        add_tag => [ "to_dkim" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{AMAVISRESULT}" ]
        add_tag => [ "result" ]
        remove_tag => [ "unknown" ]
      }
      if [to] {
        mutate { 
	  gsub => [ "to", "[<>]", "" ]
	  split => [ "to", "," ]
        }
      }      
    }

    if "qmgr" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXQMGR}" ]
        remove_tag => [ "unknown" ]
      }
      if ![queuestatus] { mutate { add_field => { "queuestatus" => "removed" } } }
    }
   if "cleanup" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXCLEANUP}" ]
        remove_tag => [ "unknown" ]
      }
    }
    if "bounce" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXBOUNCE}" ]
        remove_tag => [ "unknown" ]
      }
    }
    if "smtpd" in [tags] {
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPDTLSCONNECT}" ]
        add_tag => [ "tls" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPDDISCONNECT}" ]
        add_tag => [ "disconnect" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPDACTIONS}" ]
        add_tag => [ "action" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPDTIMEOUTS}" ]
        add_tag => [ "timeout" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPDLOGIN}" ]
        add_tag => [ "sasl", "login", "set_queue_id" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPDCLIENT}" ]
        add_tag => [ "no_sasl", "login", "set_queue_id" ]
        remove_tag => [ "unknown" ]
      }
    }
    if [component] == "smtp" or [component] == "lmtp" or [component] == "local" { 
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "%{POSTFIXSMTPRELAY}" ]
        add_tag => [ "relay" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => [ "message", "\(250 2.0.0 from MTA\(smtp:\[127.0.0.1\]:10030\): 250 2.0.0 Ok: queued as %{QUEUEID:queued_as}\)" ]
        add_tag => [ "to_dkim" ]
        remove_tag => [ "unknown" ]
      }
      grok {
        patterns_dir => ["/etc/logstash/patterns/"]
	match => [ "message", "%{POSTFIXSMTPCONNECT}" ]
	match => [ "message", "%{POSTFIXSMTP4XX}" ]
	match => [ "message", "%{POSTFIXSMTP5XX}" ]
	match => [ "message", "%{POSTFIXSMTPREFUSAL}" ]
	match => [ "message", "%{POSTFIXSMTPLOSTCONNECTION}" ]
	match => [ "message", "%{POSTFIXSMTPTIMEOUT}" ]	
        remove_tag => [ "unknown" ]
      }
    }
  }
  else if [type] == "nginx" {
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => ["message", "%{NGINXACCESS}"]
        add_tag => ["nginx_access"]
        remove_tag => [ "unknown" ]
    }
  } 
  else if [type] == "zimbra" {
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => ["message", "%{ZMAUDIT}"]
        add_tag => ["audit"]
        remove_tag => [ "unknown" ]
    }
  }
  else {
    grok {
        patterns_dir => ["/etc/logstash/patterns/"]
        match => ["message", "%{SYSLOGBASE}"]
        add_tag => ["unknown"]
    }
  }
  
  date {
    match => [ "created_at", "MMM dd HH:mm:ss", "MMM  d HH:mm:ss", "ISO8601"]
    add_tag => [ "dated" ]
  }
  
}
